# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2007 Best Practical Solutions, LLC
#                                          <jesse@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/copyleft/gpl.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
use strict;
use warnings;

package RT::ScripAction::Autoreply;
use base qw(RT::ScripAction::SendEmail);

=head2 prepare

Set up the relevant recipients, then call our parent.

=cut

sub prepare {
    my $self = shift;
    $self->set_recipients();
    $self->SUPER::prepare();
}


=head2 set_recipients

Sets the recipients of this message to this ticket's Requestor.

=cut

sub set_recipients {
    my $self = shift;

    push( @{ $self->{'To'} }, $self->ticket_obj->role_group("requestor")->member_emails );

    return (1);
}



=head2 set_return_address

Set this message\'s return address to the apropriate queue address

=cut

sub set_return_address {
    my $self = shift;
    my $friendly_name;

    if ( RT->config->get('UseFriendlyFromLine') ) {
        $friendly_name = $self->ticket_obj->queue->description
          || $self->ticket_obj->queue->name;
    }

    $self->SUPER::set_return_address( @_, friendly_name => $friendly_name );

}



=head2 set_rt_special_headers

Set the C<Auto-Generated> header to C<auto-replied>, in accordance
with RFC3834.

=cut

sub set_rt_special_headers {
    my $self = shift;
    $self->SUPER::set_rt_special_headers(@_);
    $self->set_header( 'Auto-Submitted', 'auto-replied' );

}


1;
