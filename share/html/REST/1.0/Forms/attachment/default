%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2009 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
%# REST/1.0/Forms/attachment/default
%#
<%ARGS>
$id
$args => undef
</%ARGS>
<%INIT>
my @data;
my ($c, $o, $k, $e) = ("", [], {}, "");
my $attachment = RT::Model::Attachment->new;

$attachment->load($id);
unless ( $attachment->Id ) {
    return [ "# Attachment $id does not exist.", [], {}, 1 ];
}
unless ( $attachment->Id eq $id ) {
    return [ "# Invalid attachment id: $id", [], {}, 1 ];
}

my @arglist = split( '/', $args || "" );
my $content;

if ( @argslist and $arglist[0] eq 'content' ) {
    $c = $attachment->OriginalContent;
} else {
    my @data;
    push @data, [ id              => "attachment/" . $attachment->Id ];
    push @data, [ Subject         => $attachment->subject ];
    push @data, [ Creator         => $attachment->creator ];
    push @data, [ Created         => $attachment->created ];
    push @data, [ Transaction     => $attachment->transaction_id ];
    push @data, [ Parent          => "attachment/" . $attachment->parent ];
    push @data, [ MessageId       => $attachment->message_id ];
    push @data, [ Filename        => $attachment->filename ];
    push @data, [ ContentType     => $attachment->content_type ];
    push @data, [ ContentEncoding => $attachment->content_encoding ];
    push @data, [ Headers         => $attachment->headers ];
    if ( $attachment->content_type =~ m|^text/| ) {
        push @data, [ Content => $attachment->content ];
    } else {
        push @data,
            [ Content =>
                "Content is not text and will not be displayed!\n"
              . "Use \"rt show attachment/<id>/content [> file.ext]\" to get the content."
            ];
    }

    my %k = map {@$_} @data;
    $o = [ map { $_->[0] } @data ];
    $k = \%k;
}

return [ $c, $o, $k, $e ];

</%INIT>
