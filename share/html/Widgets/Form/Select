%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<%DOC>
see docs/using_forms_widgets.pod
</%DOC>
<div id="form-box-<% lc $name %>" class="widget">
% if ( $description ) {
<span class="label"><% $description %></span>
% }
<span class="value"><& SELF:InputOnly, %ARGS &></span>
</div>
<%ARGS>
$name
$description      => undef,
</%ARGS>

<%METHOD InputOnly>
<%ARGS>
$name
$description      => undef,

@values           => (),
$valuesCallback   => undef,
%values_label      => (),
@current_value     => (),

$default            => 1,
@default_value       => (),
$default_label       => _('Use system default (%1)', join ', ', @default_value),

$Alternative      => 0,
$AlternativeLabel => _('other...'),

$Multiple         => 0,
</%ARGS>
<select name="<% $name %>">

% if ( $default ) {
% my $selected = '';
% $selected = 'selected="selected"' unless @current_value;
<option value="__empty_value__" <% $selected |n %>><% $default_label %></option>
% }

% foreach my $v( @values ) {
% my $selected = '';
% $selected = 'selected="selected"' if delete $current_value{ $v };
<option value="<% $v %>" <% $selected |n %>><% $values_label{ $v } || $v %></option>
% }

% if ( $Alternative ) {
%     my $selected = '';
%     $selected = 'selected="selected"' if keys %current_value;
<option value="__alternative_value__" <% $selected |n %>><% $AlternativeLabel %></option>
% }

</select>
% if ( $Alternative ) {
<input type="text" class="alternative" name="Alternative-<% $name %>" value="<% join ', ', @current_value %>" />
% }
<%INIT>
my %current_value = map {$_ => 1} grep defined, @current_value;
if ( $valuesCallback ) {
    my $values = $valuesCallback->(
        current_user => Jifty->web->current_user,
        name        => $name,
    );
    if ( ref $values eq 'ARRAY' ) {
        @values = @$values;
    } else {
        %values_label = %$values;
        @values = keys %values_label;
    }
}
</%INIT>
</%METHOD>

<%METHOD Process>
<%ARGS>
$name

$Arguments        => {},

@values           => (),
%values_label      => (),

$default          => 0,
@default_value     => (),

$Alternative      => 0,
$Multiple         => 0,
</%ARGS>
<%INIT>
my $value = $Arguments->{ $name };
if( !defined $value || $value eq '__empty_value__' ) {
    return undef if $default;
    return [ @default_value ] if $Multiple;
    return $default_value[0];
}
$value = [$value] unless ref $value;

if ( $Alternative ) {
    my $alt = $Arguments->{ "Alternative-". $name };
    if( $Multiple ) {
        push @$value, split /\s*,\s*/, $alt;
    } else {
        push @$value, $alt;
    }
}

splice @$value, 1 unless $Multiple;

# XXX: check values

return $value->[0] unless $Multiple;
return $value;
</%INIT>
</%METHOD>
