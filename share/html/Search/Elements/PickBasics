%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
% foreach( @lines ) {
<& ConditionRow, condition => $_ &>
% }
<%INIT>

my @lines = (
    {
        name => 'id',
        field => _('id'),
        op => {
            type => 'component',
            path => '/Elements/SelectEqualityOperator',
        },
        value => { type => 'text', Size => 5 }
    },
    {
        name => 'attachment',
        field => {
            type => 'component',
            path => '/Elements/SelectAttachmentField',
        },
        op => {
            type => 'component',
            path => '/Elements/SelectBoolean',
            arguments => {
			    true => _("matches"), 
			    false => _("doesn't match"), 
			    true_val => 'LIKE',
			    false_val => 'NOT LIKE',
            },
        },
        value => { type => 'text', Size => 20 },
    },
    {
        name => 'queue',
        field => _('queue'),
        op => {
            type => 'component',
            path => '/Elements/SelectBoolean',
            arguments => { true_val=> '=', false_val => '!=' },
        },
        value => {
            type => 'component',
            path => '/Elements/SelectQueue',
            arguments => { named_values => 1, check_queue_right => 'ShowTicket' },
        },
    },
    {
        name => 'status',
        field => _('Status'),
        op => {
            type => 'component',
            path => '/Elements/SelectBoolean',
            arguments => { true_val=> '=', false_val => '!=' },
        },
        value => {
            type => 'component',
            path => '/Elements/SelectStatus',
            arguments => { skip_deleted => 1 },
        },
    },
    {
        name => 'actor',
        field => {
            type    => 'select',
            options => [
                owner => _('Owner'),
                creator => _('creator'),
                last_updated_by => _('Last updated by'),
            ],
        },
        op => {
            type => 'component',
            path => '/Elements/SelectBoolean',
            arguments => { true_val=> '=', false_val => '!=' },
        },
        value => {
            type => 'component',
            path => '/Elements/SelectOwner',
            arguments => { value_attribute => 'name' },
        },
    },
    {
        name => 'watcher',
        field => {
            type => 'component',
            path => 'SelectPersonType',
            arguments => { default => 'Requestor' },
        },
        op => {
            type => 'component',
            path => '/Elements/SelectMatch',
        },
        value => { type => 'text', Size => 20 }
    },
    {
        name => 'date',
        field => {
            type => 'component',
            path => '/Elements/SelectDateType',
        },
        op => {
            type => 'component',
            path => '/Elements/SelectDateRelation',
        },
        value => {
            type => 'component',
            path => '/Elements/SelectDate',
            arguments => { show_time => 0, default => '' },
        },
    },
    {
        name => 'time',
        field => {
            type    => 'select',
            options => [
                time_worked => _('Time Worked'),
                time_estimated => _('Time Estimated'),
                time_left => _('Time Left'),
            ],
        },
        op => {
            type => 'component',
            path => '/Elements/SelectEqualityOperator',
        },
        value => [
            { type => 'text', Size => 5 },
            {
                type => 'component',
                path => '/Elements/SelectTimeUnits',
            },
        ],
    },
    {
        name => 'priority',
        field => {
            type    => 'select',
            options => [
                priority => _('Priority'),
                initial_priority => _('Initial Priority'),
                final_priority => _('Final Priority'),
            ],
        },
        op => {
            type => 'component',
            path => '/Elements/SelectEqualityOperator',
        },
        value => { type => 'text', Size => 5 }
    },
    {
        name => 'links',
        field => { type => 'component', path => 'SelectLinks' },
        op => {
            type => 'component',
            path => '/Elements/SelectBoolean',
            arguments => { true_val=> '=', false_val => '!=' },
        },
        value => { type => 'text', Size => 5 }
    },
);

$m->callback( Conditions => \@lines );

</%INIT>
