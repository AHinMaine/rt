%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<&|Elements/Wrapper, Title => 'Initialize Database' &> 

<& /Elements/ListActions, actions => \@results &>

% unless ( @results ) {
<div>
<&|/l&>Click "Initialize Database" to begin creating the database. This may take a few moments</&>
</div>
% }

<form method="post">
<input type="hidden" name="Run" value="1">
<& /Elements/Submit, Label => _('Initialize Database'), Back => 1,
    BackLabel => _('Back: Customize Sendmail') &>
</form>
</&>
<%init>
my @results;
if ( $Run ) {
    if ( $Back ) {
        RT::Interface::Web::Redirect(RT->config->get('WebURL') .
'Install/Sendmail.html');
    }

    my @actions = split /,/, $RT::Installer->{DatabaseAction};

    my $sysdbh = DBI->connect(
        Jifty->handle->SystemDSN,
        $RT::Installer->{InstallConfig}{DatabaseAdmin},
        $RT::Installer->{InstallConfig}{DatabaseAdminPassword}, 
        { RaiseError => 0, PrintError => 0 },
    );
    die $DBI::errstr unless $sysdbh;

    my ( $status, $msg ) = ( 1, '' );

    if ( $actions[0] eq 'create' ) {
        ($status, $msg) = Jifty->handle->createDatabase( $sysdbh );
        unless ( $status ) {
            push @results, "ERROR: $msg";
        }

        shift @actions; # shift the 'create' action since its job is done.
    }

    if ( $status ) {

        my $dbh = DBI->connect(
            Jifty->handle->DSN, $RT::Installer->{InstallConfig}{DatabaseAdmin},
            $RT::Installer->{InstallConfig}{DatabaseAdminPassword}, 
            { RaiseError => 0, PrintError => 0 },
        );
        die $DBI::errstr unless $dbh;

        foreach my $action ( @actions ) {
            ($status, $msg) = (1, '');
            if ( $action eq 'schema' ) {
                ($status, $msg) = Jifty->handle->InsertSchema( $dbh );
            }
            elsif ( $action eq 'acl' ) {
                ($status, $msg) = Jifty->handle->InsertACL( $dbh );
            }
            elsif ( $action eq 'coredata' ) {
                Jifty->handle = new Jifty->handle;
                Jifty->handle->dbh( undef );
                RT::ConnectToDatabase();
                RT::InitLogging();
                ($status, $msg) = Jifty->handle->InsertInitialData;
            }
            elsif ( $action eq 'insert' ) {
                Jifty->handle = new Jifty->handle;
                RT::Init();
                my $file = $RT::EtcPath . "/initialdata";
                ($status, $msg) = Jifty->handle->InsertData( $file );
            }
            unless ( $status ) {
                push @results, "ERROR: $msg";
                last;
            }
        }
    }

    unless ( @results ) {
        RT::Interface::Web::Redirect(RT->config->get('WebURL') .
'Install/Finish.html');
    }
}
</%init>
<%args>
$Run => undef
$Back => undef
</%args>

