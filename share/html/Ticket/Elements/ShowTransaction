%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<div class="ticket-transaction <% $type_class %> <% $row_num % 2 ? 'odd' : 'even' %>">
% $m->callback( titlebar_cmd => \$titlebar_commands, transaction => $transaction, %ARGS, callback_name => 'ModifyDisplay' );
<div class="ticket-transaction">
% $m->callback( titlebar_cmd => \$titlebar_commands, transaction => $transaction, %ARGS, callback_name => 'ModifyCommand' );
  <div class="metadata">
    <span class="type">
      <a name="txn-<% $transaction->id %>" href="<% $display_path %>#txn-<% $transaction->id %>">#</a>
      <% $last_transaction ? '<a id="lasttrans" name="lasttrans"></a>' : ''|n %>
    </span>
    <span class="date"><% $transdate|n %></span>
% my $desc = $transaction->brief_description;
% $m->callback( text => \$desc, transaction => $transaction, %ARGS, callback_name => 'ModifyDisplay' );
    <span class="description">
      <% $transaction->creator->name %> - <% $TicketString %> <% $desc %>
    </span>
    <span class="time-taken"><% $time_taken %></span>
    <span class="actions<% $titlebar_commands ? '': ' hidden'%>"><% $titlebar_commands |n %></span>
  </div>

    <div class="content">
% if ( $attachments->[0] && $attachments->[0]->id ) {
%   if (RT->config->get('gnupg')->{'enable'}) {
        <& ShowGnuPGStatus, attachment => $attachments->[0], warn_unsigned => $warn_unsigned &>
%   }
% }
% if ( $transaction->custom_field_values->count ) {
      <& /Elements/ShowCustomFields, object => $transaction &>
% }
% $m->comp('ShowTransactionAttachments', %ARGS, parent => 0) unless ($collapsed ||!$show_body);
    </div>

</div>

</div>

<%ARGS>
$ticket => undef
$transaction => undef
$show_headers => 0
$collapsed => undef
$show_title_bar_commands => 1
$row_num => 1
$display_path => RT->config->get('web_path')."/Ticket/Display.html?id=".$ticket->id
$attach_path => RT->config->get('web_path')."/Ticket/Attachment"
$update_path => RT->config->get('web_path')."/Ticket/Update.html"
$forward_path => RT->config->get('web_path')."/Ticket/Forward.html"
$encryption_path => RT->config->get('web_path')."/Ticket/GnuPG.html"
$email_record_path => RT->config->get('web_path')."/Ticket/ShowEmailRecord.html"
$attachments => undef
$attachment_content => undef
$show_body => 1
$last_transaction => 0
$warn_unsigned => undef
</%ARGS>
<%ONCE>

my %class = (
    Create     => 'message',
    correspond => 'message',
    comment    => 'message',

    add_watcher => 'people',
    del_watcher => 'people',
    Take       => 'people',
    Untake     => 'people',
    Force      => 'people',
    Steal      => 'people',
    Give       => 'people',

    AddLink    => 'links',
    delete_link => 'links',
);

</%ONCE>
<%INIT>

my $transdate = $transaction->created;
$transdate =~ s/\s/&nbsp;/g;

my ($type, $field) = ($transaction->type, $transaction->field || '');
my $type_class = $class{ $type };

unless ( $type_class ) {
    if ( $field eq 'Owner' ) {
        $type_class = 'people';
    }
    elsif ( $type =~ /^(Status|Set|Told)$/ ) {
        if ( $field =~ /^(Told|starts|Started|Due)$/ ) {
            $type_class = 'dates';
        }
        else {
            $type_class = 'basics';
        }
    }
    else {
        $type_class = 'other';
    }
}

my $TicketString = '';
if ( $ticket->id != $transaction->object_id ) {
    $TicketString = "Ticket " . $transaction->object_id . ": ";
}

my $time_taken = '';
$time_taken = $transaction->time_taken . " min"
    if $transaction->time_taken;

unless ($attachments) { 
    my $attachments = $transaction->attachments;
    $attachments->query_columns( qw( id filename content_type headers subject parent content_encoding content_type transaction_id) );
    $attachments = $attachments->items_array_ref();
}
my $titlebar_commands = '';

if ( $type =~ /email_record$/ ) {

    $titlebar_commands .=
        "[<a target=\"_blank\" href=\"$email_record_path?id="
      . $transaction->object_id
      . "&transaction="
      . $transaction->id
      . "&attachment="
      . ( $attachments->[0] && $attachments->[0]->id )
      . '">' . _('Show') . "</a>]&nbsp;";
    $show_body = 0;
}


# If the transaction has anything attached to it at all
else {

    if ( $attachments->[0] && $show_title_bar_commands ) {
        my $ticket = $transaction->object;
        my $can_modify = $ticket->current_user_has_right('ModifyTicket');
        if ( $can_modify || $ticket->current_user_has_right('ReplyToTicket') ) {
            $titlebar_commands .=
                "[<a href=\"".$update_path
              . "?id=" . $transaction->object_id
              . "&QuoteTransaction=" . $transaction->id
              . "&action=respond\">"
              . _('Reply')
              . "</a>]&nbsp;";
        }
        if ( $can_modify || $ticket->current_user_has_right('CommentOnTicket') ) {
            $titlebar_commands .=
                "[<a href=\"".$update_path."?id="
              . $transaction->object_id
              . "&QuoteTransaction="
              . $transaction->id
              . "&action=comment\">"
              . _('comment') . "</a>]";
        }
        if ( $ticket->current_user_has_right('ForwardMessage') ) {
            $titlebar_commands .=
                "[<a href=\"". $forward_path
              . "?id=". $transaction->object_id
              . "&QuoteTransaction=". $transaction->id
              . "\">". _('Forward') . "</a>]";
        }
        if ( $can_modify
            && RT->config->get('gnupg')->{'enable'}
            && RT->config->get('gnupg')->{'allow_encrypt_data_in_db'}
            && $ticket->current_user_has_right('ForwardMessage')
        ) {
            $titlebar_commands .=
                "[<a href=\"". $encryption_path
              . "?id=". $transaction->id
              . "\">". _('Encrypt/Decrypt') . "</a>]";
        }
    }
}
</%INIT>
