%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<&| /Widgets/TitleBox, title => _('Graph Properties') &>

<% _('Direction') %> <select name="direction">
<option value="TB" <% ($direction||'TB') eq 'TB'? 'selected="selected"': '' |n %>><% _('top to bottom') %></option>
<option value="LR" <% ($direction||'TB') eq 'LR'? 'selected="selected"': '' |n %>><% _('left to right') %></option>
%# XXX: not supported by GraphViz perl module
%#<option value="BT" <% ($direction||'TB') eq 'BT'? 'selected="selected"': '' |n %>><% _('bottom to top') %></option>
%#<option value="RL" <% ($direction||'TB') eq 'RL'? 'selected="selected"': '' |n %>><% _('right to left') %></option>
</select><br />

<% _('Main type of links') %> <select name="leading_link">
% foreach ( @link_types ) {
<option value="<% $_ %>" <% ($leading_link||'members') eq $_? 'selected="selected"': '' |n %>><% _($_) %></option>
% }
</select>

<% _('maximum depth') %> <select name="max_depth">
<option value="0"><% _('Unlimit') %></option>
% foreach ( 1..6 ) {
<option value="<% $_ %>" <% ($max_depth||0) == $_? 'selected="selected"': '' %>><% $_ %></option>
% }
</select><br />

<% _('Show as well') %>:
% foreach my $type ( @link_types ) {
% my $checked = '';
% $checked = 'checked="checked"' if grep $type eq $_, @show_links;
<input type="checkbox" name="show_links" value="<% $type %>" <% $checked |n %> /><% _($type) %>
% }
<br />

% my @properties = RT::Graph::Tickets->ticket_properties( current_user => Jifty->web->current_user );

<% _('Fill boxes with color using') %>:
<select name="fill_using">
<option value=""><% _('nothing') %></option>
<%PERL>
my @tmp = @properties;
while ( my ($group, $list) = (splice @tmp, 0, 2) ) {
    # coloring by links and dates sounds stupid
    next if $group eq 'Dates' || $group eq 'Links';

    foreach my $prop ( @$list ) {
        my $selected = '';
        $selected = 'selected="selected"' if $prop eq ($fill_using||'');
</%PERL>
<option value="<% $prop %>" <% $selected |n %>><% _($prop) %></option>
% } }
</select><br />

% if ( RT::Model::Link->can('description' ) ) {
% my $checked = '';
% $checked = 'checked="checked"' if $show_link_descriptions;
<% _('Show link descriptions') %>:
<input type="checkbox" name="show_link_descriptions" value="1" <% $checked |n %> />
<br />
% }

<%PERL>
for my $i ( 1..($max_depth||6) ) {
    my @default;
    if ( my $tmp = $ARGS{ 'level-'. $i .'-properties' } ) {
        @default = ref $tmp? @$tmp : ($tmp);
    }

    $m->comp('SELF:Properties',
        level => $i,
        available => \@properties,
        default => \@default,
    );
}
</%PERL>

<& /Elements/Submit, label => _('Update Graph'), name => 'update' &>

</&>

<%ARGS>
$id => undef
$direction => 'TB'
$leading_link => 'members'
@show_links => ('member_of', 'depends_on', 'refers_to')
$max_depth => 3
$fill_using => ''
$show_link_descriptions => 0
</%ARGS>
<%INIT>
require RT::Graph::Tickets;
require RT::Model::Link;

my @link_types = qw(members member_of refers_to referred_to_by depends_on
depended_on_by); #loc_qw
@show_links = grep $_ ne $leading_link, @show_links;
</%INIT>

<%METHOD Properties>
<%ARGS>
@available => ()
@default   => ()
$level     => 1,
</%ARGS>
<%INIT>
my $id = "graph-properties-box-$level";
my $class = '';
$class = 'class="hidden"' if $level != 1 && !@default;
</%INIT>
<% _('Show Tickets Properties on %1 level', $level) %>
(<small><a href="#" onclick="hideshow('<% $id %>'); return false;"><% _('open/close') %></a></small>):
<table id="<% $id %>" <% $class |n %>>
% while ( my ($group, $list) = (splice @available, 0, 2) ) {
<tr><td><% _($group) %>:</td><td>
% foreach my $prop ( @$list ) {
% my $checked = '';
% $checked = 'checked="checked"' if grep $_ eq $prop, @default;
<input type="checkbox" class="checkbox" name="level-<% $level %>-properties" value="<% $prop %>" <% $checked |n %> /><% _($prop) %>
% }
</td></tr>
% }
</table>
<br />
</%METHOD>
