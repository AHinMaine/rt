%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<select name="<%$name%>" id="<%$name%>">
%if ($default_value) {
<option value=""<% !$default ? qq[ selected="selected"] : '' |n %>><%$default_label%></option>
%}


% $default = 0 unless defined $default && $default =~ /^\d+$/;
% my @formatednames = sort {lc $a->[1] cmp lc $b->[1]} map {[$_, $m->scomp('/Elements/ShowUser', user => $_)]} @users;
%foreach my $UserRef ( @formatednames)  {
%my $user = $UserRef->[0];
<option <% ( $user->id == $default) ? qq[ selected="selected"] : '' |n %>
%if ($value_attribute eq 'id') {
    value="<%$user->id%>"
%} elsif ($value_attribute eq 'name') {
    value="<%$user->name%>"
%}
><% $UserRef->[1] |n %></option>
%}
</select>
<%INIT>

my @objects;
if ($ticket_obj) {
    @objects = ($ticket_obj);
} elsif ($queue_obj) {
    @objects = ($queue_obj);
} elsif ($cfqueues) {
    @objects = keys %{$cfqueues};
} else {
# Let's check rights on an empty queue object. that will do a search
# for any queue.
    my $queue = RT::Model::Queue->new;
    push( @objects, $queue );
}

my %user_uniq_hash;

$m->callback(
    %ARGS,
    objects      => \@objects,
    callback_name => 'update_objectList'
);

my $isSU = Jifty->web->current_user
    ->has_right( right => 'SuperUser', object => RT->system );

foreach my $object (@objects) {
    my $Users = RT::Model::UserCollection->new;
    $Users->who_have_right(
        right               => 'OwnTicket',
        object              => $object,
        include_system_rights => 1,
        include_superusers   => $isSU
    );
    while ( my $user = $Users->next() ) {
        next
            if ( $user->id == $RT::nobody->id )
            ;    # skip nobody here, so we can make them first later
        $user_uniq_hash{ $user->id() } = $user;
    }
}
if ($default && $default != $RT::nobody->id && !$user_uniq_hash{$default}) {
    $user_uniq_hash{$default} = RT::Model::User->new;
    $user_uniq_hash{$default}->load($default);
}

my @users = sort { uc( $a->name ) cmp uc( $b->name ) } values %user_uniq_hash;
unshift( @users, $RT::nobody );

$m->callback(
    %ARGS,
    objects      => \@objects,
    callback_name => 'update_objectList'
);

</%INIT>

<%ARGS>
$queue_obj => undef
$name => undef
$default => 0
$user => undef
$ticket_obj => undef
$default_value => 1
$default_label => "-"
$value_attribute => 'id'
$cfqueues => undef
</%ARGS>
