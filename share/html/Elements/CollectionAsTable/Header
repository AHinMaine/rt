%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<%ARGS>
$Class        => 'RT__Model__Ticket'

@format       => undef
$format_string => undef
@order_by      => ()
@order        => ()
$query        => undef
$Rows         => undef
$Page         => undef
$GenericQueryArgs => undef
$maxitems     => undef

$AllowSorting  => undef
$baseURL       => undef
@PassArguments => qw(query format rows page order order_by)
</%ARGS>
<tr class="collection-as-table">
<%PERL>

my $generic_query_args = $GenericQueryArgs || {map { $_ => $ARGS{$_} } @PassArguments};
# backward compatibility workaround
$generic_query_args->{'format'} = $formatString if grep $_ eq 'format', @PassArguments;

my $item = 0;
foreach my $col ( @format ) {
    my $title = $col->{'title'} || '';
    if ( $title eq 'NEWLINE' ) {
        while ( $item < $maxitems ) {
            $m->out(qq{<th class="collection-as-table">&nbsp;</th>\n});
            $item++;
        }

        $item = 0;
        $m->out(qq{</tr>\n<tr class="collection-as-table">});
        next;
    } elsif ( $title eq 'NBSP' ) {
        $item++;
        $m->out(qq{<th class="collection-as-table">&nbsp;</th>\n});
        next;
    }

    $item++;

    $m->out('<th class="collection-as-table">');

    $title =~ s/^__(.*)__$/$1/o;
    my $tmp = $m->comp( '/Elements/ColumnMap',
        Class => $Class,
        name  => $title,
        Attr  => 'title',
    );

    unless( $tmp ) {
        $title = $m->interp->apply_escapes( _($title), 'h' );
    } else {
        if ( UNIVERSAL::isa( $tmp, 'CODE' ) ) {
            my @tmp = $tmp->( $title );
            $title = @tmp > 1? \@tmp: shift @tmp || '';
        } else {
            $title = $tmp;
        }
        if( UNIVERSAL::isa( $title, 'ARRAY' ) ) {
            $title = join '', map { ref $_? $$_: $m->interp->apply_escapes( $_, 'h' ) } @$title;
        } elsif( UNIVERSAL::isa( $title, 'SCALAR' ) ) {
            $title = $$title;
        } else {
            $title = $m->interp->apply_escapes( $title, 'h' );
        }
    }

    if ( $AllowSorting and $col->{'attribute'}
        and my $attr = $m->comp(
            "/Elements/ColumnMap",
            Class => $Class,
            name  => $col->{'attribute'},
            Attr  => 'attribute'
        )
      )
    {
        my $new_order = 'ASC';
        $new_order = $order[0] eq 'ASC'? 'DESC': 'ASC'
            if $order_by[0] && $order_by[0] eq $attr;

        $m->out(
            '<a href="' . $baseURL
            . $m->comp( '/Elements/QueryString',
                %$generic_query_args,
                order_by => $attr, order => $new_order
            )
            . '">'. $title .'</a>'
        );
    }
    else {
        $m->out( $title );
    }
    $m->out('</th>');
}
</%PERL>
</tr>
