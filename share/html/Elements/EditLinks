%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2008 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<table width="100%">
  <tr>
    <td valign="top" width="50%">
      <h3><&|/l&>Current Links</&></h3>

<table>
  <tr>
    <td class="labeltop"><&|/l&>Depends on</&>:</td>
    <td class="value">
% while (my $link = $object->depends_on->next) {
      <input type="checkbox" class="checkbox" name="delete_link--<%$link->type%>-<%$link->target%>" value="1" />
        <& ShowLink, URI => $link->target_uri &><br />
% }
    </td>
  </tr>
  <tr>
    <td class="labeltop"><&|/l&>Depended on by</&>:</td>
    <td class="value">
% while (my $link = $object->depended_on_by->next) {
      <input type="checkbox" class="checkbox" name="delete_link-<%$link->base%>-<%$link->type%>-" value="1" />
        <& ShowLink, URI => $link->base_uri &><br />
% }
    </td>
  </tr>
  <tr>
    <td class="labeltop"><&|/l&>Parents</&>:</td>
    <td class="value">
% while (my $link = $object->member_of->next) {
      <input type="checkbox" class="checkbox" name="delete_link--<%$link->type%>-<%$link->target%>" value="1" />
        <& ShowLink, URI => $link->target_uri &><br />
% }
    </td>
  </tr>
  <tr>
    <td class="labeltop"><&|/l&>Children</&>:</td>
    <td class="value">
% while (my $link = $object->members->next) {
      <input type="checkbox" class="checkbox" name="delete_link-<%$link->base%>-<%$link->type%>-" value="1" />
        <& ShowLink, URI => $link->base_uri &><br />
% }
    </td>
  </tr>
  <tr>
    <td class="labeltop"><&|/l&>Refers to</&>:</td>
    <td class="value">
% while (my $link = $object->refers_to->next) {
      <input type="checkbox" class="checkbox" name="delete_link--<%$link->type%>-<%$link->target%>" value="1" />
        <& ShowLink, URI => $link->target_uri &><br />
%}
    </td>
  </tr>
  <tr>
    <td class="labeltop"><&|/l&>Referred to by</&>:</td>
    <td class="value">
% while (my $link = $object->referred_to_by->next) {
% # Skip reminders
% next if (UNIVERSAL::isa($link->base_obj, 'RT::Model::Ticket')  && $link->base_obj->type eq 'reminder');
      <input type="checkbox" class="checkbox" name="delete_link-<%$link->base%>-<%$link->type%>-" value="1" />
        <& ShowLink, URI => $link->base_uri &><br />
% }
    </td>
  </tr>
  <tr>
    <td></td>
    <td><i><&|/l&>(Check box to delete)</&></i></td>
  </tr>
</table>
			    
</td>
<td valign="top">
<h3><&|/l&>New Links</&></h3>
% if (ref($object) eq 'RT::Model::Ticket') {
<i><&|/l&>Enter tickets or URIs to link tickets to. Separate multiple entries with spaces.</&>
% $m->callback( Callbackname => 'ExtraLinkInstructions' );
</i><br />
% } elsif (ref($object) eq 'RT::Model::Queue') {
<i><&|/l&>Enter queues or URIs to link queues to. Separate multiple entries with spaces.</&>
</i><br />
% } else {
<i><&|/l&>Enter objects or URIs to link objects to. Separate multiple entries with spaces.</&></i><br />
% }
<table>
% if ($Merge) {
  <tr>
    <td class="label"><&|/l&>Merge into</&>:</td>
    <td class="entry"><input name="<%$id%>-MergeInto" /> <i><&|/l&>(only one ticket)</&></i></td>
  </tr>
% }
  <tr>
    <td class="label"><&|/l&>Depends on</&>:</td>
    <td class="entry"><input name="<%$id%>-DependsOn" /></td>
  </tr>
  <tr>
    <td class="label"><&|/l&>Depended on by</&>:</td>
    <td class="entry"><input name="DependsOn-<%$id%>" /></td>
  </tr>
  <tr>
    <td class="label"><&|/l&>Parents</&>:</td>
    <td class="entry"><input name="<%$id%>-MemberOf" /></td>
  </tr>
  <tr>
    <td class="label"><&|/l&>Children</&>:</td>
    <td class="entry"> <input name="MemberOf-<%$id%>" /></td>
  </tr>
  <tr>
    <td class="label"><&|/l&>Refers to</&>:</td>
    <td class="entry"><input name="<%$id%>-RefersTo" /></td>
  </tr>
  <tr>
    <td class="label"><&|/l&>Referred to by</&>:</td>
    <td class="entry"> <input name="RefersTo-<%$id%>" /></td>
  </tr>
% $m->callback( Callbackname => 'NewLink' );
</table>
</td>
</tr>
</table>

<%INIT>
my $id;
if ($object && $object->id) {
    $id = $object->id;
} else {
    $id = 'new';
}
</%INIT>
      
<%ARGS>
$object => undef
$Merge => 0
</%ARGS>
