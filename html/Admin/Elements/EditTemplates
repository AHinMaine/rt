<& /Elements/ListActions, actions => \@actions &>

<form method="get" action="Templates.html">
<input type="hidden" class="hidden" name="id" value="<% $id %>" />

% unless ( $Templates->count ) {
<p><i><&|/l&>(No templates)</&></i></p>
% } else {

<i><&|/l&>(Check box to delete)</&></i>

<& /Elements/CollectionList,
    order_by       => 'id',
    Order         => 'ASC',
    BaseURL       => 'Templates.html?',
    %ARGS,
    DisplayFormat => '__CheckBox.{DeleteTemplates}__,'. $Format,
    Format        => $Format,
    Collection    => $Templates,
    AllowSorting  => 1,
    PassArguments => [qw(Format Rows Page Order order_by FinddisabledQueues)],
&>
% }

<& /Elements/Submit, Label => _('Delete Template') &>
</form>

<%INIT>
my $dir_path = $m->request_comp->dir_path;
$Format ||= qq{'<a href="__WebPath__$dir_path/Template.html?Queue=$id&Template=__id__">__id__</a>/TITLE:#'}
    .qq{,'<a href="__WebPath__$dir_path/Template.html?Queue=$id&Template=__id__">__name__</a>/TITLE:name'}
    .qq{,'__Description__'};

my $QueueObj = RT::Model::Queue->new();
$QueueObj->load( $id ) if $id;

my $Templates = RT::Model::TemplateCollection->new();
if ( $QueueObj->id ) {
    $Templates->LimitToQueue( $id );
}
else {
    $Templates->LimitToGlobal;
}

# Now let callbacks add their extra limits
$m->callback( %ARGS, Templates => $Templates );
$Templates->redo_search;

# deal with deleting existing templates
my @actions;
# backwards compatibility, use DeleteTemplates array for this
foreach my $key (keys %ARGS) {
    next unless $key =~ /^DeleteTemplate-(\d+)/;
    push @DeleteTemplates, $1;
}

foreach my $id( @DeleteTemplates ) {
    my $TemplateObj = RT::Model::Template->new();
    $TemplateObj->load( $id );
    unless ( $TemplateObj->id ) {
        push @actions, _("Couldn't load template #%1", $id);
        next;
    }

    my ($retval, $msg) = $TemplateObj->delete;
    if ( $retval ) {
        push @actions, _("Template #%1 deleted", $id);
    }
    else {
        push @actions, $msg;
    }
}
</%INIT>
<%ARGS>
$id => 0

$Format => undef

@DeleteTemplates => ()
</%ARGS>
